# Copyright 2013 The Flutter Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//flutter/common/config.gni")
import("//flutter/impeller/compiler/tools/compiler.gni")

config("impeller_config") {
  include_dirs = [ ".." ]
}

impeller_shaders("shaders") {
  name = "impeller"
  shaders = [
    "compositor/shaders/box/box.frag",
    "compositor/shaders/box/box.vert",
  ]
}

source_set("impeller") {
  public_configs = [ ":impeller_config" ]

  cflags_objc = flutter_cflags_objc_arc
  cflags_objcc = flutter_cflags_objcc_arc

  include_dirs = [
    "entity",
    "geometry",
    "image",
    "compositor",
  ]

  compositor_sources = [
    "compositor/context.h",
    "compositor/context.mm",
    "compositor/pipeline_builder.h",
    "compositor/pipeline_builder.mm",
    "compositor/pipeline_descriptor.h",
    "compositor/pipeline_descriptor.mm",
    "compositor/pipeline_library.h",
    "compositor/pipeline_library.mm",
    "compositor/renderer.h",
    "compositor/renderer.mm",
    "compositor/shader_library.h",
    "compositor/shader_library.mm",
    "compositor/surface.h",
    "compositor/surface.mm",
  ]

  geometry_sources = [
    "geometry/matrix.cc",
    "geometry/matrix.h",
    "geometry/path.cc",
    "geometry/path.h",
    "geometry/path_builder.cc",
    "geometry/path_builder.h",
    "geometry/path_component.cc",
    "geometry/path_component.h",
    "geometry/point.cc",
    "geometry/point.h",
    "geometry/quaternion.cc",
    "geometry/quaternion.h",
    "geometry/rect.cc",
    "geometry/rect.h",
    "geometry/shear.cc",
    "geometry/shear.h",
    "geometry/size.cc",
    "geometry/size.h",
    "geometry/vector.cc",
    "geometry/vector.h",
  ]

  entity_sources = [
    "entity/color.cc",
    "entity/color.h",
    "entity/entity.cc",
    "entity/entity.h",
  ]

  image_sources = [
    "image/image.cc",
    "image/image.h",
    "image/image_result.cc",
    "image/image_result.h",
  ]

  sources =
      compositor_sources + geometry_sources + entity_sources + image_sources

  deps = [
    ":shaders",
    "//flutter/fml",
    "//flutter/impeller/third_party/stb",
    "//flutter/runtime:libdart",  # For tracing, seems to be pulled in by FML.
  ]
}
